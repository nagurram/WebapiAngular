# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
 branches:
    include:
    - master
 paths:
   include:
     - WebapiAngular/LSDataApi/*

pool:
   vmImage: 'windows-latest'
 
variables:
  solution: '**/LSDataApi.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'
  testConfiguration: 'Debug'

steps:
- script: 
    choco install iis.administration
    #choco install webdeploy -y
    #choco install urlrewrite -y
  displayName: 'CHOCO Enable iis'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Remove-WebSite -Name "Default Web Site"
      # Write your PowerShell commands here.
      md "c:\Web Sites\webapp"
      $site = $site = new-WebSite -name "webapp" -PhysicalPath "c:\Web Sites\webapp" -force
  displayName: 'Powershell Create WebApp'
  
- script: choco install sql-server-express
  displayName: 'CHOCO INSTALL SQL-SERVER-EXPRESS'

- script: 'sqlcmd -S .\SQLEXPRESS -Q "CREATE DATABASE [TicketTracker]"'
  displayName: 'Create database TicketTracker in Azure Devops SQL EXPRESS'
  
- script: 'sqlcmd -i $(Build.SourcesDirectory)\WebapiAngular\DBScripts\DBmigrate.sql -S .\SQLEXPRESS -d TicketTracker'
  displayName: ' Run migrate.sql on SQL EXPRESS in Azure Devops'

- task: NuGetToolInstaller@1
- task: VisualStudioTestPlatformInstaller@1
  displayName: 'Visual Studio Test Platform Installer'
  inputs:
    versionSelector: latestStable

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'
    feedsToUse: 'select'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="webapp"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\LSDataApi.Tests.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
    codeCoverageEnabled: true
    configuration: '$(testConfiguration)'
