//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ang4api.DBContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TicketTrackerEntities : DbContext
    {
        public TicketTrackerEntities()
            : base("name=TicketTrackerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ApplicationMaster> ApplicationMasters { get; set; }
        public virtual DbSet<Entity> Entities { get; set; }
        public virtual DbSet<Entity_Link> Entity_Link { get; set; }
        public virtual DbSet<Exception> Exceptions { get; set; }
        public virtual DbSet<FinancialEventSource> FinancialEventSources { get; set; }
        public virtual DbSet<FinancialEventSourceFlatFile> FinancialEventSourceFlatFiles { get; set; }
        public virtual DbSet<FinancialEventSourceSwift> FinancialEventSourceSwifts { get; set; }
        public virtual DbSet<FXTrade> FXTrades { get; set; }
        public virtual DbSet<ModuleMaster> ModuleMasters { get; set; }
        public virtual DbSet<PriorityMaster> PriorityMasters { get; set; }
        public virtual DbSet<Resource> Resources { get; set; }
        public virtual DbSet<RoleMaster> RoleMasters { get; set; }
        public virtual DbSet<RootCauseMaster> RootCauseMasters { get; set; }
        public virtual DbSet<StatusMaster> StatusMasters { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<Trade> Trades { get; set; }
        public virtual DbSet<TradeValidationError> TradeValidationErrors { get; set; }
        public virtual DbSet<TypeMaster> TypeMasters { get; set; }
        public virtual DbSet<UserMaster> UserMasters { get; set; }
        public virtual DbSet<TrainingMaster> TrainingMasters { get; set; }
        public virtual DbSet<MenuItem> MenuItems { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<MenuPermission> MenuPermissions { get; set; }
        public virtual DbSet<vw_user_permissions> vw_user_permissions { get; set; }
        public virtual DbSet<FileUpload> FileUploads { get; set; }
    
        [DbFunction("TicketTrackerEntities", "ufn_CSVToTable")]
        public virtual IQueryable<ufn_CSVToTable_Result> ufn_CSVToTable(string stringInput)
        {
            var stringInputParameter = stringInput != null ?
                new ObjectParameter("StringInput", stringInput) :
                new ObjectParameter("StringInput", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_CSVToTable_Result>("[TicketTrackerEntities].[ufn_CSVToTable](@StringInput)", stringInputParameter);
        }
    
        [DbFunction("TicketTrackerEntities", "ufnGetChilds")]
        public virtual IQueryable<ufnGetChilds_Result> ufnGetChilds(Nullable<int> parentId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("parentId", parentId) :
                new ObjectParameter("parentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufnGetChilds_Result>("[TicketTrackerEntities].[ufnGetChilds](@parentId)", parentIdParameter);
        }
    
        public virtual int Fact(Nullable<int> number, ObjectParameter retVal)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Fact", numberParameter, retVal);
        }
    
        public virtual int INS(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INS", queryParameter);
        }
    
        public virtual ObjectResult<Proc_Get_Open_Tickets_Result> Proc_Get_Open_Tickets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Get_Open_Tickets_Result>("Proc_Get_Open_Tickets");
        }
    
        public virtual ObjectResult<Proc_GetTickets_Result> Proc_GetTickets(Nullable<int> ticketid)
        {
            var ticketidParameter = ticketid.HasValue ?
                new ObjectParameter("Ticketid", ticketid) :
                new ObjectParameter("Ticketid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetTickets_Result>("Proc_GetTickets", ticketidParameter);
        }
    
        public virtual ObjectResult<sp_getDEtails_Result> sp_getDEtails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getDEtails_Result>("sp_getDEtails");
        }
    
        public virtual int SP_LogException(string xmlException)
        {
            var xmlExceptionParameter = xmlException != null ?
                new ObjectParameter("xmlException", xmlException) :
                new ObjectParameter("xmlException", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LogException", xmlExceptionParameter);
        }
    
        public virtual ObjectResult<USP_AuthenticateUser_Result> USP_AuthenticateUser(string userId, string password)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_AuthenticateUser_Result>("USP_AuthenticateUser", userIdParameter, passwordParameter);
        }
    
        public virtual int usp_FinancialEventSource()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FinancialEventSource");
        }
    
        public virtual int usp_FinancialEventSourceFlatFile()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FinancialEventSourceFlatFile");
        }
    
        public virtual int usp_FinancialEventSourceSwift()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FinancialEventSourceSwift");
        }
    
        public virtual ObjectResult<USP_GET_ApplicationeMASTER_Result> USP_GET_ApplicationeMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_ApplicationeMASTER_Result>("USP_GET_ApplicationeMASTER");
        }
    
        public virtual ObjectResult<USP_GET_ModuleMASTER_Result> USP_GET_ModuleMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_ModuleMASTER_Result>("USP_GET_ModuleMASTER");
        }
    
        public virtual ObjectResult<USP_GET_PRIORITYMASTER_Result> USP_GET_PRIORITYMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_PRIORITYMASTER_Result>("USP_GET_PRIORITYMASTER");
        }
    
        public virtual ObjectResult<USP_GET_Resource_Result> USP_GET_Resource()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_Resource_Result>("USP_GET_Resource");
        }
    
        public virtual ObjectResult<USP_GET_RootCause_Result> USP_GET_RootCause()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_RootCause_Result>("USP_GET_RootCause");
        }
    
        public virtual ObjectResult<USP_GET_StatusMASTER_Result> USP_GET_StatusMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_StatusMASTER_Result>("USP_GET_StatusMASTER");
        }
    
        public virtual ObjectResult<USP_GETTypdMASTER_Result> USP_GETTypdMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GETTypdMASTER_Result>("USP_GETTypdMASTER");
        }
    
        public virtual int USP_INSERT_RootCause(string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_INSERT_RootCause", descriptionParameter);
        }
    
        public virtual int usp_mlprun()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_mlprun");
        }
    
        public virtual int USP_UPDATE_RootCause(Nullable<int> rootCauseId, string description)
        {
            var rootCauseIdParameter = rootCauseId.HasValue ?
                new ObjectParameter("RootCauseId", rootCauseId) :
                new ObjectParameter("RootCauseId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UPDATE_RootCause", rootCauseIdParameter, descriptionParameter);
        }
    }
}
